@model List<InventoryManagement.Models.OptionalFields>
@{
    ViewBag.Title = "DynamicControl";
}

<style>
    .field-validation-error {
        color: red;
    }

    .checkbox {
        padding-left: 20px;
    }

        .checkbox label {
            display: inline-block;
            position: relative;
            padding-left: 5px;
        }

            .checkbox label::before {
                content: "";
                display: inline-block;
                position: absolute;
                width: 17px;
                height: 17px;
                left: 0;
                margin-left: -20px;
                border: 1px solid #cccccc;
                border-radius: 3px;
                background-color: #fff;
                -webkit-transition: border 0.15s ease-in-out, color 0.15s ease-in-out;
                -o-transition: border 0.15s ease-in-out, color 0.15s ease-in-out;
                transition: border 0.15s ease-in-out, color 0.15s ease-in-out;
            }

            .checkbox label::after {
                display: inline-block;
                position: absolute;
                width: 16px;
                height: 16px;
                left: 0;
                top: 0;
                margin-left: -20px;
                padding-left: 3px;
                padding-top: 1px;
                font-size: 11px;
                color: #555555;
            }

        .checkbox input[type="checkbox"] {
            opacity: 0;
        }

            .checkbox input[type="checkbox"]:focus + label::before {
                outline: thin dotted;
                outline: 5px auto -webkit-focus-ring-color;
                outline-offset: -2px;
            }

            .checkbox input[type="checkbox"]:checked + label::after {
                font-family: 'FontAwesome';
                content: "\f00c";
            }

            .checkbox input[type="checkbox"]:disabled + label {
                opacity: 0.65;
            }

                .checkbox input[type="checkbox"]:disabled + label::before {
                    background-color: #eeeeee;
                    cursor: not-allowed;
                }

        .checkbox.checkbox-circle label::before {
            border-radius: 50%;
        }

        .checkbox.checkbox-inline {
            margin-top: 0;
        }

    .checkbox-primary input[type="checkbox"]:checked + label::before {
        background-color: #428bca;
        border-color: #428bca;
    }

    .checkbox-primary input[type="checkbox"]:checked + label::after {
        color: #fff;
    }

    .checkbox-danger input[type="checkbox"]:checked + label::before {
        background-color: #d9534f;
        border-color: #d9534f;
    }

    .checkbox-danger input[type="checkbox"]:checked + label::after {
        color: #fff;
    }

    .checkbox-info input[type="checkbox"]:checked + label::before {
        background-color: #5bc0de;
        border-color: #5bc0de;
    }

    .checkbox-info input[type="checkbox"]:checked + label::after {
        color: #fff;
    }

    .checkbox-warning input[type="checkbox"]:checked + label::before {
        background-color: #f0ad4e;
        border-color: #f0ad4e;
    }

    .checkbox-warning input[type="checkbox"]:checked + label::after {
        color: #fff;
    }

    .checkbox-success input[type="checkbox"]:checked + label::before {
        background-color: #5cb85c;
        border-color: #5cb85c;
    }

    .checkbox-success input[type="checkbox"]:checked + label::after {
        color: #fff;
    }

    .radio {
        padding-left: 20px;
    }

        .radio label {
            display: inline-block;
            position: relative;
            padding-left: 5px;
        }

            .radio label::before {
                content: "";
                display: inline-block;
                position: absolute;
                width: 17px;
                height: 17px;
                left: 0;
                margin-left: -20px;
                border: 1px solid #cccccc;
                border-radius: 50%;
                background-color: #fff;
                -webkit-transition: border 0.15s ease-in-out;
                -o-transition: border 0.15s ease-in-out;
                transition: border 0.15s ease-in-out;
            }

            .radio label::after {
                display: inline-block;
                position: absolute;
                content: " ";
                width: 11px;
                height: 11px;
                left: 3px;
                top: 3px;
                margin-left: -20px;
                border-radius: 50%;
                background-color: #555555;
                -webkit-transform: scale(0, 0);
                -ms-transform: scale(0, 0);
                -o-transform: scale(0, 0);
                transform: scale(0, 0);
                -webkit-transition: -webkit-transform 0.1s cubic-bezier(0.8, -0.33, 0.2, 1.33);
                -moz-transition: -moz-transform 0.1s cubic-bezier(0.8, -0.33, 0.2, 1.33);
                -o-transition: -o-transform 0.1s cubic-bezier(0.8, -0.33, 0.2, 1.33);
                transition: transform 0.1s cubic-bezier(0.8, -0.33, 0.2, 1.33);
            }

        .radio input[type="radio"] {
            opacity: 0;
        }

            .radio input[type="radio"]:focus + label::before {
                outline: thin dotted;
                outline: 5px auto -webkit-focus-ring-color;
                outline-offset: -2px;
            }

            .radio input[type="radio"]:checked + label::after {
                -webkit-transform: scale(1, 1);
                -ms-transform: scale(1, 1);
                -o-transform: scale(1, 1);
                transform: scale(1, 1);
            }

            .radio input[type="radio"]:disabled + label {
                opacity: 0.65;
            }

                .radio input[type="radio"]:disabled + label::before {
                    cursor: not-allowed;
                }

        .radio.radio-inline {
            margin-top: 0;
        }

    .radio-primary input[type="radio"] + label::after {
        background-color: #428bca;
    }

    .radio-primary input[type="radio"]:checked + label::before {
        border-color: #428bca;
    }

    .radio-primary input[type="radio"]:checked + label::after {
        background-color: #428bca;
    }

    .radio-danger input[type="radio"] + label::after {
        background-color: #d9534f;
    }

    .radio-danger input[type="radio"]:checked + label::before {
        border-color: #d9534f;
    }

    .radio-danger input[type="radio"]:checked + label::after {
        background-color: #d9534f;
    }

    .radio-info input[type="radio"] + label::after {
        background-color: #5bc0de;
    }

    .radio-info input[type="radio"]:checked + label::before {
        border-color: #5bc0de;
    }

    .radio-info input[type="radio"]:checked + label::after {
        background-color: #5bc0de;
    }

    .radio-warning input[type="radio"] + label::after {
        background-color: #f0ad4e;
    }

    .radio-warning input[type="radio"]:checked + label::before {
        border-color: #f0ad4e;
    }

    .radio-warning input[type="radio"]:checked + label::after {
        background-color: #f0ad4e;
    }

    .radio-success input[type="radio"] + label::after {
        background-color: #5cb85c;
    }

    .radio-success input[type="radio"]:checked + label::before {
        border-color: #5cb85c;
    }

    .radio-success input[type="radio"]:checked + label::after {
        background-color: #5cb85c;
    }
</style>
@*@using (Html.BeginForm("DynamicControl", "Setting", FormMethod.Post))
    {


    }*@
@using (Ajax.BeginForm("DynamicControl", "Setting", new AjaxOptions { }))
{

    <div class="fa-heading" style="font-family:fantasy;">Create fields </div>

    <hr />
    <div class="col-xs-12">
        <div class="table-responsive-vertical shadow-z-1">
            <table id="table" class="table table-hover table-mc-light-blue">
                <thead>
                    <tr>
                        <th>Sno</th>
                        <th>Field Name</th>
                        <th>Status</th>

                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>1</td>
                        <td>@Html.TextBoxFor(x => Model[0].option1, new { @class = "form-control" })</td>
                        <td style="display: -webkit-box;">
                            <div class="checkbox checkbox-success">
                                @Html.CheckBoxFor(x => Model[0].Status, new { @Id = "[0]Status" })

                                <label for="[0]Status">

                                </label>
                            </div>
                            <input type="button" value="Remove" class="btn btn-danger remove valid" aria-invalid="false">
                            @*@Html.CheckBoxFor(x => Model[0].Status)*@
                        </td>
                    </tr>
                </tbody>
                <tfoot>
                    <tr>
                        <td> <input type="button" value="Add More" class="btn btn-primary addmore" /></td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
    <div class="col-xs-12">
        <input type="submit" class="btn btn-default" value="Create" style="float:right"/>
    </div>
        

        }

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
            <script>
                $("input[type='hidden']").remove();
            </script>
            <script>
                $(document).on('click', '.addmore', function () {

                    var table = $(this).closest('table');
                    var length = table.find('input:text').length;

                    if (table.find('input:text').length < 50) {
                        var x = $(this).closest('tr').nextAll('tr');
                        $.each(x, function (i, val) {
                            val.remove();
                        });
                        var sno = length + 1;
                        table.append('<tr><td>' + sno + '</td><td><input type="text" id= "[' + length + '].option1" name="[' + length + '].option1" value="" class="form-control valid" /></td><td style="display:-webkit-inline-box;"> <div class="checkbox checkbox-success"><input type="checkbox" id="[' + length + '].Status" value="true"  name="[' + length + '].Status"/> <label for="[' + length + '].Status"></label></div><input type="button" value="Remove" class="btn btn-danger remove" /></td></tr>');
                        $.each(x, function (i, val) {
                            table.append(val);
                        });
                    }
                    $('.remove').click(function () {
                        var table = $(this).closest('table');
                        if (table.find('input:text').length > 1) {
                            table.find('input:text').last().closest('tr').remove();
                        }
                    });
                })

            </script>
        }
