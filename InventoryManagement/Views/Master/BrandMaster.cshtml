@model List<InventoryManagement.Models.BrandMaster>
@{
    ViewBag.Title = "BrandMaster";
}
<link href="~/Content/kendo/2014.1.318/kendo.common.min.css" rel="stylesheet" />
<link href="~/Content/kendo/2014.1.318/kendo.bootstrap.min.css" rel="stylesheet" />
<style>
    .k-grid-actions {
        display: inline-block;
        margin-left: 5px;
    }

    #grid {
        font-size: medium !important;
        font-family: Times New Roman, serif !important;
        font-style: unset !important;
    }

    .k-edit-cell .k-widget.k-tooltip, html .k-grid-edit-row .k-widget.k-tooltip {
        color: red !important;
        float: left;
    }
</style>
<div class="col-md-12">
    <h3 style="margin-top: 0rem;">Brand-Master</h3>
</div>
<div class="col-xs-12">
    <a href="/Master/CreateBrandMaster" class="btn btn-primary">
        <div class="d-flex w-100 justify-content-start align-items-center">
            <span>Add New</span>
        </div>
    </a>

</div>
<hr />
<div class="col-xs-12">
    <!-- Responsive table starts here -->
    <!-- For correct display on small screens you must add 'data-title' to each 'td' in your table -->
    <div class="table-responsive-vertical shadow-z-1">
        @(Html.Kendo().Grid<InventoryManagement.Models.BrandMaster>()
                            .Name("grid")
                            .Columns(columns =>
                            {
                                columns.Bound(c => c.Name).HeaderHtmlAttributes(new { @class = "hidden-xs" });
                                columns.Bound(c => c.Description).HeaderHtmlAttributes(new { @class = "hidden-xs" });
                                columns.Bound(c => c.CheckName).Hidden();
                                columns.Command(command => { command.Edit(); command.Destroy(); }).Width(220).HeaderHtmlAttributes(new { @class = "hidden-xs" });

                            })
.Scrollable()
.Editable(editable => editable.Mode(GridEditMode.InLine))
.Pageable(pageable => pageable
.Refresh(true)
.PageSizes(true)

.ButtonCount(5)

)

.DataSource(dataSource => dataSource
.Ajax()
.Model(model =>
{
model.Id(p => p.Id);

}


)

.Read(read => read.Action("BrandMaster_Read", "master"))
.Update(update => update.Action("UpdateBrandMaster", "master"))
.Destroy(update => update.Action("Deletebrand", "master"))


.PageSize(5)
))

    </div>

</div>

@section Scripts
 {



    <script type="text/javascript">
        //adding remote rule to handle validation based on Remote attribute set in the model.
        (function ($, kendo) {
            $.extend(true, kendo.ui.validator, {
                rules: {
                    remote: function (input) {

                        if (input.val() == "" || !input.attr("data-val-remote-url")) {
                            return true;
                        }

                        if (input.attr("data-val-remote-recieved")) {
                            input.attr("data-val-remote-recieved", "");
                            return !(input.attr("data-val-remote"));
                        }

                        var url = input.attr("data-val-remote-url");
                        var postData = {};
                        postData[input.attr("data-val-remote-additionalfields").split(".")[1]] = input.val();
                        var grid = $("#grid");
                        var ctrl = grid.find("#CheckName");
                        var validator = $("#grid").kendoValidator().data("kendoValidator");
                        var currentInput = input;
                        input.attr("data-val-remote-requested", true);
                        var Name = input.val();

                        $.ajax({
                            url: url,
                            type: "POST",
                            data: { Name: Name, PreviousBrandname: $(ctrl).val() },

                            success: function (data) {

                                debugger;
                                if (data == true) {
                                    input.attr("data-val-remote", "");
                                    $('.k-grid-update').css('display', 'inline-block');
                                }
                                else {

                                    input.attr("data-val-remote", "Name in use");
                                     $('.k-grid-update').css('display', 'none');

                                }
                                input.attr("data-val-remote-recieved", true);
                                validator.validateInput(currentInput);

                            },
                            error: function () {
                                input.attr("data-val-remote-recieved", true);
                                validator.validateInput(currentInput);

                            }
                        });
                        return true;
                    }
                },
                messages: {
                    remote: function (input) {

                       return input.attr("data-val-remote");


                    }
                }
            });
        })(jQuery, kendo);

        //show server errors if any
        function error_handler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                alert(message);
            }
        }
    </script>

}
