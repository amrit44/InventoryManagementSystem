@model InventoryManagement.Models.PermissionMaster
@using InventoryManagement.Helper;

<div class="row">

    <div class="col-md-12">
        <div class="box">
            <div class="box-body">
                <table class="table table-responsive table-bordered">
                    <thead style="background-color:#FFFFFF">
                        <tr>
                            <th colspan="2"><h5 style="color:blue"><strong>Module Name</strong></h5></th>

                            <th><input type="checkbox" value="true" id="IsAddall" name="IsAddall" /><h6>ADD</h6></th>
                            <th><input type="checkbox" value="true" id="IsEditall" name="IsEditall" /><h6>EDIT</h6></th>
                            <th><input type="checkbox" value="true" id="IsViewall" name="IsViewall" /><h6>VIEW</h6></th>

                            <th><input type="checkbox" value="true" id="IsDeleteall" name="IsDeleteall" /><h6>DELETE</h6></th>
                        </tr>
                    </thead>
                    <tbody>

                        @if (Model != null)
                        {
                            foreach (var item in Model._Permission.OrderBy(x => x.DisplayOrder))
                            {
                                var mainindex = Model._Permission.IndexOf(item);
                                string mainmenu = Commonhelper.Getmenuname(item.MenuId);
                                string dynamicclass = string.Empty;
                                dynamicclass = mainmenu;
                                <tr>


                                    <td style="color:black;background-color:#EEF1F5;width:200px">

                                        @Html.CheckBoxFor(model => Model._Permission[mainindex].Isactive, new { @class = "parent " + "_" + dynamicclass + "" })<h6 style="font-size:1.5rem;">@mainmenu</h6>
                                        @Html.HiddenFor(model => Model._Permission[mainindex].MenuId)
                                        @Html.HiddenFor(model => Model._Permission[mainindex].DisplayOrder)


                                    </td>



                                    <td hidden></td>
                                    <td hidden></td>
                                    <td><input type="hidden" id="select_all" value="true" name="IsAdd" /></td>
                                    <td><input type="hidden" id="editselect_all" value="true" name="IsEdit" /></td>
                                    <td><input type="hidden" id="viewselect_all" value="true" name="IsView" /></td>
                                    <td><input type="hidden" id="deleteselect_all" value="true" name="IsDelete" /></td>
                                </tr>
                                int sno = 0;
                                foreach (var child in Model._ModulePermission.Where(x => x.MenuId == item.MenuId).ToList())
                                {
                                    var index = Model._ModulePermission.IndexOf(child);
                                    @Html.HiddenFor(model => Model._ModulePermission[index].MenuId)
                                    @Html.HiddenFor(model => Model._ModulePermission[index].SubMenuId)
                                    string Submenu = Commonhelper.GetSubmenuname(child.SubMenuId);
                                    <tr>
                                        @*<td hidden><input type="hidden" id="FormID" name="FormID" value="@child.SubMenuId" /></td>*@
                                        @*<td hidden style="color:black;background-color:#EEF1F5;"><input type="checkbox" id="@Submenu" name="@Submenu" class="@Submenu focus_@Submenu" value="@Submenu" /><h6>@Submenu</h6></td>*@
                                        <td style="text-align:right">
                                            <h5>@(sno+1)</h5>

                                        </td>
                                        <td>
                                            <h6 style="font-size:1.5rem;">@Submenu</h6>
                                        </td>
                                        <td>

                                            @Html.CheckBoxFor(model => Model._ModulePermission[index].IsAdd, new { @class = "addfocus " + dynamicclass + "" })
                                        </td>
                                        <td>
                                            @Html.CheckBoxFor(model => Model._ModulePermission[index].IsEdit, new { @class = "editfocus " + dynamicclass + "" })
                                        </td>
                                        <td>
                                            @Html.CheckBoxFor(model => Model._ModulePermission[index].Isview, new { @class = "viewfocus " + dynamicclass + "" })
                                        </td>
                                        <td>
                                            @Html.CheckBoxFor(model => Model._ModulePermission[index].Isdelete, new { @class = "deletefocus " + dynamicclass + "" })
                                        </td>
                                    </tr>
                                    sno = sno + 1;
                                }

                            }

                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>





